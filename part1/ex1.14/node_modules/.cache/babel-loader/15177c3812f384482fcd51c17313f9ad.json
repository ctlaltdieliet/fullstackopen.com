{"ast":null,"code":"var _jsxFileName = \"/home/tomdemoor/mattermost/react/fullstackopen.com/part1/ex1.10/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: [\"   \", text, \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 46\n  }, this);\n};\n_c = Button;\nconst Title = _ref2 => {\n  let {\n    Title\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: Title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 36\n  }, this);\n};\n_c2 = Title;\nconst Averages = _ref3 => {\n  let {\n    title,\n    good,\n    bad,\n    neutral\n  } = _ref3;\n  const all = () => {\n    return good + bad + neutral;\n  };\n  const average = () => {\n    return (good - bad) / all();\n  };\n  const positive = () => {\n    return good * 100 / all();\n  };\n  if (all() === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        Title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No feedback given yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        Title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Good: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), good, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Neutral: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 43\n      }, this), neutral, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Bad: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 83\n      }, this), bad, /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"All: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), all(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Ave rage: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 44\n      }, this), average(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 82\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Positive:  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 87\n      }, this), \" \", positive(), \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n};\n_c3 = Averages;\nconst App = () => {\n  _s();\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const setGoodRating = () => setGood(good + 1);\n  ;\n  const setNeutralRating = () => setNeutral(neutral + 1);\n  const setBadRating = () => setBad(bad + 1);\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      Title: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Good\",\n      handleClick: setGoodRating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Neutral\",\n      handleClick: setNeutralRating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Bad\",\n      value: \"bad\",\n      handleClick: setBadRating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Averages, {\n      title: \"Rate us\",\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Averages\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Button","handleClick","text","Title","Averages","title","good","bad","neutral","all","average","positive","App","setGood","setNeutral","setBad","setGoodRating","setNeutralRating","setBadRating"],"sources":["/home/tomdemoor/mattermost/react/fullstackopen.com/part1/ex1.10/src/App.js"],"sourcesContent":["import { useState } from 'react'\nconst Button = ({ handleClick, text }) => (  <button onClick={handleClick}>   {text}  </button>)\nconst Title= ({Title}) => {return (<h1>{Title}</h1>)}\n  \nconst Averages = ({title,good,bad,neutral}) =>{\n  const all=() => {return good+bad+neutral}\n  const average=() => {return (good-bad)/all()}\n  const positive=()=> {return good*100/all()}\n  if (all()===0){\n    return(\n      <div>\n         <Title Title={title} />\n         <h2>No feedback given yet</h2> \n      </div>)\n  }\n  else {\n    return(\n      <div>\n        <Title Title={title} />\n        <strong>Good: </strong>{good}<br/><strong>Neutral: </strong>{neutral}<br/><strong>Bad: </strong>{bad}\n        <p/>\n        <strong>All: </strong>{all() }<br/><strong>Ave rage: </strong>{average()}<br/><strong>Positive:  </strong> {positive()} %\n      </div>)\n  }\n}    \n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0);\n  const setGoodRating = () => setGood(good + 1);;\n  const setNeutralRating = () => setNeutral(neutral + 1);\n  const setBadRating = () =>  setBad(bad + 1); ;\n \n  return (\n    <div>\n      <Title Title=\"Give Feedback\" />\n      <Button text=\"Good\" handleClick={setGoodRating} /> \n      <Button text=\"Neutral\" handleClick={setNeutralRating} /> \n      <Button text=\"Bad\" value=\"bad\" handleClick={setBadRating} /> \n      <Averages title=\"Rate us\" good={good} bad={bad} neutral={neutral}/>\n  </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}